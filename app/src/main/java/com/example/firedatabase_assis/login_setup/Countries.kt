package com.example.firedatabase_assis.login_setup

// Define the Country data class
data class Country(val iso_3166_1: String, val englishName: String, val nativeName: String)

// Create a list of Country instances
val countries = listOf(
    Country("AD", "Andorra", "Andorra"),
    Country("AE", "United Arab Emirates", "United Arab Emirates"),
    Country("AG", "Antigua and Barbuda", "Antigua & Barbuda"),
    Country("AL", "Albania", "Albania"),
    Country("AO", "Angola", "Angola"),
    Country("AR", "Argentina", "Argentina"),
    Country("AT", "Austria", "Austria"),
    Country("AU", "Australia", "Australia"),
    Country("AZ", "Azerbaijan", "Azerbaijan"),
    Country("BA", "Bosnia and Herzegovina", "Bosnia & Herzegovina"),
    Country("BB", "Barbados", "Barbados"),
    Country("BE", "Belgium", "Belgium"),
    Country("BF", "Burkina Faso", "Burkina Faso"),
    Country("BG", "Bulgaria", "Bulgaria"),
    Country("BH", "Bahrain", "Bahrain"),
    Country("BM", "Bermuda", "Bermuda"),
    Country("BO", "Bolivia", "Bolivia"),
    Country("BR", "Brazil", "Brazil"),
    Country("BS", "Bahamas", "Bahamas"),
    Country("BY", "Belarus", "Belarus"),
    Country("BZ", "Belize", "Belize"),
    Country("CA", "Canada", "Canada"),
    Country("CD", "Congo", "Democratic Republic of the Congo (Kinshasa)"),
    Country("CH", "Switzerland", "Switzerland"),
    Country("CI", "Cote D'Ivoire", "Côte d’Ivoire"),
    Country("CL", "Chile", "Chile"),
    Country("CM", "Cameroon", "Cameroon"),
    Country("CO", "Colombia", "Colombia"),
    Country("CR", "Costa Rica", "Costa Rica"),
    Country("CU", "  ", "Cuba"),
    Country("CV", "Cape Verde", "Cape Verde"),
    Country("CY", "Cyprus", "Cyprus"),
    Country("CZ", "Czech Republic", "Czech Republic"),
    Country("DE", "Germany", "Germany"),
    Country("DK", "Denmark", "Denmark"),
    Country("DO", "Dominican Republic", "Dominican Republic"),
    Country("DZ", "Algeria", "Algeria"),
    Country("EC", "Ecuador", "Ecuador"),
    Country("EE", "Estonia", "Estonia"),
    Country("EG", "Egypt", "Egypt"),
    Country("ES", "Spain", "Spain"),
    Country("FI", "Finland", "Finland"),
    Country("FJ", "Fiji", "Fiji"),
    Country("FR", "France", "France"),
    Country("GB", "United Kingdom", "United Kingdom"),
    Country("GF", "French Guiana", "French Guiana"),
    Country("GH", "Ghana", "Ghana"),
    Country("GI", "Gibraltar", "Gibraltar"),
    Country("GP", "Guadaloupe", "Guadeloupe"),
    Country("GQ", "Equatorial Guinea", "Equatorial Guinea"),
    Country("GR", "Greece", "Greece"),
    Country("GT", "Guatemala", "Guatemala"),
    Country("GY", "Guyana", "Guyana"),
    Country("HK", "Hong Kong", "Hong Kong SAR China"),
    Country("HN", "Honduras", "Honduras"),
    Country("HR", "Croatia", "Croatia"),
    Country("HU", "Hungary", "Hungary"),
    Country("ID", "Indonesia", "Indonesia"),
    Country("IE", "Ireland", "Ireland"),
    Country("IL", "Israel", "Israel"),
    Country("IN", "India", "India"),
    Country("IQ", "Iraq", "Iraq"),
    Country("IS", "Iceland", "Iceland"),
    Country("IT", "Italy", "Italy"),
    Country("JM", "Jamaica", "Jamaica"),
    Country("JO", "Jordan", "Jordan"),
    Country("JP", "Japan", "Japan"),
    Country("KE", "Kenya", "Kenya"),
    Country("KR", "South Korea", "South Korea"),
    Country("KW", "Kuwait", "Kuwait"),
    Country("LB", "Lebanon", "Lebanon"),
    Country("LC", "St. Lucia", "St. Lucia"),
    Country("LI", "Liechtenstein", "Liechtenstein"),
    Country("LT", "Lithuania", "Lithuania"),
    Country("LU", "Luxembourg", "Luxembourg"),
    Country("LV", "Latvia", "Latvia"),
    Country("LY", "Libyan Arab Jamahiriya", "Libya"),
    Country("MA", "Morocco", "Morocco"),
    Country("MC", "Monaco", "Monaco"),
    Country("MD", "Moldova", "Moldova"),
    Country("ME", "Montenegro", "Montenegro"),
    Country("MG", "Madagascar", "Madagascar"),
    Country("MK", "Macedonia", "Macedonia"),
    Country("ML", "Mali", "Mali"),
    Country("MT", "Malta", "Malta"),
    Country("MU", "Mauritius", "Mauritius"),
    Country("MW", "Malawi", "Malawi"),
    Country("MX", "Mexico", "Mexico"),
    Country("MY", "Malaysia", "Malaysia"),
    Country("MZ", "Mozambique", "Mozambique"),
    Country("NE", "Niger", "Niger"),
    Country("NG", "Nigeria", "Nigeria"),
    Country("NI", "Nicaragua", "Nicaragua"),
    Country("NL", "Netherlands", "Netherlands"),
    Country("NO", "Norway", "Norway"),
    Country("NZ", "New Zealand", "New Zealand"),
    Country("OM", "Oman", "Oman"),
    Country("PA", "Panama", "Panama"),
    Country("PE", "Peru", "Peru"),
    Country("PF", "French Polynesia", "French Polynesia"),
    Country("PG", "Papua New Guinea", "Papua New Guinea"),
    Country("PH", "Philippines", "Philippines"),
    Country("PK", "Pakistan", "Pakistan"),
    Country("PL", "Poland", "Poland"),
    Country("PS", "Palestinian Territory", "Palestinian Territories"),
    Country("PT", "Portugal", "Portugal"),
    Country("PY", "Paraguay", "Paraguay"),
    Country("QA", "Qatar", "Qatar"),
    Country("RO", "Romania", "Romania"),
    Country("RS", "Serbia", "Serbia"),
    Country("RU", "Russia", "Russia"),
    Country("SA", "Saudi Arabia", "Saudi Arabia"),
    Country("SC", "Seychelles", "Seychelles"),
    Country("SE", "Sweden", "Sweden"),
    Country("SG", "Singapore", "Singapore"),
    Country("SI", "Slovenia", "Slovenia"),
    Country("SK", "Slovakia", "Slovakia"),
    Country("SM", "San Marino", "San Marino"),
    Country("SN", "Senegal", "Senegal"),
    Country("SV", "El Salvador", "El Salvador"),
    Country("TC", "Turks and Caicos Islands", "Turks & Caicos Islands"),
    Country("TD", "Chad", "Chad"),
    Country("TH", "Thailand", "Thailand"),
    Country("TN", "Tunisia", "Tunisia"),
    Country("TR", "Turkey", "Turkey"),
    Country("TT", "Trinidad and Tobago", "Trinidad & Tobago"),
    Country("TW", "Taiwan", "Taiwan"),
    Country("TZ", "Tanzania", "Tanzania"),
    Country("UA", "Ukraine", "Ukraine"),
    Country("UG", "Uganda", "Uganda"),
    Country("US", "United States of America", "United States"),
    Country("UY", "Uruguay", "Uruguay"),
    Country("VA", "Holy See", "Vatican City"),
    Country("VE", "Venezuela", "Venezuela"),
    Country("XK", "Kosovo", "Kosovo"),
    Country("YE", "Yemen", "Yemen"),
    Country("ZA", "South Africa", "South Africa"),
    Country("ZM", "Zambia", "Zambia"),
    Country("ZW", "Zimbabwe", "Zimbabwe")

)

// Create a map that links English names to ISO 3166-1 codes
val countryMap = countries.associateBy({ it.englishName }, { it.iso_3166_1 })

// Function to retrieve ISO 3166-1 code given an English name
fun getIsoCode(countryName: String): String? {
    return countryMap[countryName]
}


